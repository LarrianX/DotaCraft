name: Build Mod

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      body:
        description: 'Описание релиза'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: List build directory
      run: ls -R build

    - name: Save build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: build/libs/*.jar

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    - name: Extract version from file
      id: extract_version
      run: |
        filename=$(basename build/libs/*.jar)
        version=$(echo $filename | sed -n 's/.*-\([0-9]\+\.[0-9]\+\)-.*/\1/p')
        echo "VERSION=$version" >> $GITHUB_ENV

    - name: Extract Minecraft version from file
      id: extract_minecraft_version
      run: |
        filename=$(basename build/libs/*.jar)
        minecraft_version=$(echo $filename | sed -n 's/.*-[0-9]\+\.[0-9]\+-\([0-9]\+\.[0-9]\+\.[0-9]\+\)\.jar/\1/p')
        echo "MINECRAFT_VERSION=$minecraft_version" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        body: ${{ github.event.inputs.body }}
        draft: false
        prerelease: false

    - name: List build directory
      run: ls -R /home/runner/work/DotaCraft/DotaCraft/
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /home/runner/work/DotaCraft/DotaCraft/dotacraft-${{ env.VERSION }}-${{ env.MINECRAFT_VERSION }}.jar
        asset_name: dotacraft-${{ env.VERSION }}-${{ env.MINECRAFT_VERSION }}.jar
        asset_content_type: application/java-archive
